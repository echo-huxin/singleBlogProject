{"version":3,"sources":["webpack://movie-list/./src/movie/list/index.js","webpack://movie-list/./src/movie/list/index.module.less?bbc3","webpack://movie-list/./src/api/movie.js","webpack://movie-list/./src/movie/pager/index.module.less?10e2","webpack://movie-list/./src/movie/pager/index.js","webpack://movie-list/./src/movie/index.js"],"names":["container","createMovieTags","movies","result","map","m","url","cover","title","rate","join","html","$","addClass","appendTo","getMovies","page","limit","axios","params","size","resp","data","createTag","text","status","targetPage","console","log","span","className","styles","on","movieList","createPagers","movieTotal","total","empty","pageNumber","Math","ceil","min","floor","maxCount","max","i","init"],"mappings":"mLAGA,IAAIA,EAcG,SAASC,EAAgBC,GAC9B,IAAMC,EAASD,EACZE,KACC,SAACC,GAAD,kCACOA,EAAEC,IADT,uCAC2CD,EAAEE,MAD7C,8BAEOF,EAAEC,IAFT,uCCnBsD,0BDmBtD,aAE4DD,EAAEG,MAF9D,iCCnBuF,wBDmBvF,aAGwBH,EAAEI,KAH1B,qBAMDC,KAAK,IACRV,EAAUW,KAAKR,GAnBfH,EAAYY,IAAE,SAASC,SCPG,yBDOwBC,SAAS,Q,mVENtD,SAAeC,EAAtB,oC,iDAAO,WAAyBC,EAAMC,GAA/B,sGACcC,QAAU,cAAe,CAC1CC,OAAQ,CACNH,OACAI,KAAMH,KAJL,cACCI,EADD,yBAOEA,EAAKC,MAPP,4C,sBCDP,SAAgB,MAAQ,0BAA0B,SAAW,0BAA0B,OAAS,yB,4TCIhG,IAAItB,EAcJ,SAASuB,EAAUC,EAAMC,EAAQC,GAC/BC,QAAQC,IAAI,QACZ,IAAMC,EAAOjB,IAAE,UAAUE,SAASd,GAAWwB,KAAKA,GAC5CM,EAAYC,EAAON,GACzBI,EAAKhB,SAASiB,GAEC,KAAXL,GACFI,EAAKG,GAAG,QAAR,2BAAiB,mHAEIjB,EAAUW,EAAY,IAF1B,OAIfzB,GAFMoB,EAFS,QAIMC,KAAKW,WAE1BC,EAAaR,EAAY,GAAIL,EAAKC,KAAKa,YANxB,4CAgBd,SAASD,EAAalB,EAAMC,EAAOmB,GACxCpC,EAAUqC,QAOV,IAAMC,EAAaC,KAAKC,KAAKJ,EAAQnB,GAErCM,EAAU,KAAe,IAATP,EAAa,WAAa,GAAI,GAE9CO,EAAU,MAAgB,IAATP,EAAa,WAAa,GAAIA,EAAO,GAEtD,IACIyB,EAAMF,KAAKG,MAAM1B,EAAO2B,GAC5BF,EAAM,IAAMA,EAAM,GAClB,IAAIG,EAAMH,EAHO,GAGU,EAC3BG,EAAMN,IAAeM,EAAMN,GAC3B,IAAK,IAAIO,EAAIJ,EAAKI,GAAKD,EAAKC,IAC1BtB,EAAUsB,EAAGA,IAAM7B,EAAO,SAAW,GAAI6B,GAI3CtB,EAAU,MAAOP,IAASsB,EAAa,WAAa,GAAItB,EAAO,GAE/DO,EAAU,KAAMP,IAASsB,EAAa,WAAa,GAAIA,G,6WCjEzD,mHACqBvB,EAAU,EAAG,IADlC,OAEEd,GADMoB,EADR,QAEuBC,KAAKW,WAC1BC,EAAa,EAAG,GAAIb,EAAKC,KAAKa,YAHhC,4C,sBDOEnC,EAAYY,IAAE,SAASC,SAASkB,SAAcjB,SAAS,Q,mCCDzDgC","file":"js/chunk-13499.js","sourcesContent":["import $ from 'jquery';\nimport styles from './index.module.less';\n\nlet container;\n/**\n * 初始化函数，负责创建容器\n */\nfunction init() {\n  container = $('<div>').addClass(styles.container).appendTo('#app');\n}\n\ninit();\n\n/**\n * 根据传入的电影数组，创建元素，填充到容器中\n * @params movies 电影数组\n */\nexport function createMovieTags(movies) {\n  const result = movies\n    .map(\n      (m) => `<div>\n  <a href=\"${m.url}\" target=\"_blank\"><img src=\"${m.cover}\"></a>\n  <a href=\"${m.url}\" target=\"_blank\"><p class=\"${styles.title}\">${m.title}</p></a>\n  <p class=\"${styles.rate}\">${m.rate}</p>\n  </div>`\n    )\n    .join('');\n  container.html(result);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"kOrlLuNtBylKs91raZIOU\",\"title\":\"_3pYTYHeeDH0bFkeCn3ld06\",\"rate\":\"nm_NW-jBa8IeDMNfp4JFo\"};","import axios from 'axios';\n\nexport async function getMovies(page, limit) {\n  const resp = await axios.get('/api/movies', {\n    params: {\n      page,\n      size: limit,\n    },\n  });\n  return resp.data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"pager\":\"_1VN1YU2G2lDHkQWRtrceUO\",\"disabled\":\"_2dd1ehDdnLaT1lF72w3i1q\",\"active\":\"kLc696jYNRmHedH9tJqp3\"};","import $ from \"jquery\";\nimport styles from \"./index.module.less\";\nimport { getMovies } from \"@/api/movie\";\nimport { createMovieTags } from \"@/movie/list\";\n\nlet container;\n/**\n * 初始化函数，负责创建容器\n */\nfunction init() {\n  container = $(\"<div>\").addClass(styles.pager).appendTo(\"#app\");\n}\ninit();\n/**\n *\n * @param {*} text\n * @param {*} status\n * @param {*} targetPage\n */\nfunction createTag(text, status, targetPage) {\n  console.log(123123);\n  const span = $(\"<span>\").appendTo(container).text(text);\n  const className = styles[status];\n  span.addClass(className);\n  // 只有是普通样式时才需要监听点击事件\n  if (status === \"\") {\n    span.on(\"click\", async function () {\n      //1. 重新拿数据\n      const resp = await getMovies(targetPage, 30);\n      //2. 重新生成列表\n      createMovieTags(resp.data.movieList);\n      //3. 重新生成分页区域\n      createPagers(targetPage, 30, resp.data.movieTotal);\n    });\n  }\n}\n/**\n * 根据传入的页码、页容量、总记录数，创建分页区域的标签\n * @params page 页码\n * @params limit 页容量\n * @params total 总页数\n */\nexport function createPagers(page, limit, total) {\n  container.empty();\n  /**\n   * 辅助函数，负责帮忙创建一个页码标签\n   * @params text 标签的文本\n   * @params status 标签的状态，空字符串-普通状态，disabled-禁用状态，active-选中状态\n   */\n\n  const pageNumber = Math.ceil(total / limit); // 最大页码\n  //1. 创建首页标签\n  createTag(\"首页\", page === 1 ? \"disabled\" : \"\", 1);\n  //2. 创建上一页标签\n  createTag(\"上一页\", page === 1 ? \"disabled\" : \"\", page - 1);\n  //3. 创建数字页码标签\n  const maxCount = 10; // 最大数字页码的数量\n  let min = Math.floor(page - maxCount / 2);\n  min < 1 && (min = 1);\n  let max = min + maxCount - 1;\n  max > pageNumber && (max = pageNumber);\n  for (let i = min; i <= max; i++) {\n    createTag(i, i === page ? \"active\" : \"\", i);\n  }\n\n  //4. 创建下一页标签\n  createTag(\"下一页\", page === pageNumber ? \"disabled\" : \"\", page + 1);\n  //5. 创建尾页标签\n  createTag(\"尾页\", page === pageNumber ? \"disabled\" : \"\", pageNumber);\n}\n","import { createMovieTags } from \"./list\";\nimport { getMovies } from \"../api/movie\";\nimport { createPagers } from \"./pager\";\nasync function init() {\n  const resp = await getMovies(1, 30);\n  createMovieTags(resp.data.movieList); // 创建列表\n  createPagers(1, 30, resp.data.movieTotal); // 创建分页区域\n}\n\ninit();\n"],"sourceRoot":""}